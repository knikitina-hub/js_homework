/* var result = 'number' + 3 + 3;
console.log(result); // number33  - конкатенація в якій відбулось склеєння двох частин */

/* var result = null + 3;
console.log(result);  //  3 - бо null = false = 0, a 0+3 = 3 */

/* 5 && "qwerty"; //  5 = true, 'qwerty' = true, отже true або останнє значення ('qwerty') */

/*  var result = +'40' + +'2' + "hillel";
console.log(result); //  42hillel -  спочатку відбулась дія додавання , потім конкатенація */

/* console.log ('10' - 5 === 6); // false, бо 5 < 6  */

/* true + false; // 1, бо true = 1, false = 0 */

/* '4px' - 3; //  NaN, бо 4px неможливо перетворити на число */

/* var result = '4' - 3;
console.log(result); //  1, бо відбувається звичайне віднімання */

/* '6' + 3 ** 0; //  3 ** 0 = 1; '6'+ 1 = 61 */

/* var result = 12 / '6';
console.log(result); // 2,  бо відбувається звичайне ділення */

/* var result = '10' + (5 === 6);
 console.log(result) //  10false , бо спочатку дія в дужках , де 5 не дорівнює 6 , тобто false, а потім "10" + false , де все перетворюється в string  */

/* console.log (null == ''); // false, бо null може = тільки "undefined" і ні чому іншому, а "" = завжди false, отже вони нерівні */

/* 3 ** (9 / 3); //  9/3 = 3, 3 **3 = 27 */

/*!!'false' == !!'true'; // так як 'false' це string value i = true, після дії !! воно залишається true, а 'true' теж залишається true, тому відповідь - true  */

/* 0 || '0' && 1; // спочатку відбувається дія 'and', де '0' це true і 1 це true, отже буде true або 1, потім відбувається дія 'or' , де 0 це false, і 1 це true, де повертається перше true або 1 */

/* (+null == false) < 1; //  +null = 0 і дорівнює false, значить перша частина буде true, отже true (1) < 1 , що є неправдою, отже false */

/* false && true || true; //  true, бо в першій частині обчислення припиняються, як тільки знаходимо false, а в другій - як тільки знаходимо true */

/* false && (false || true); //  в частині в дужках буде true (бо тут цикл перевірки "або" - виходимо, як тільки знайшли хоч один true ), а потім буде false, бо при циклі перевірки "i" виходимо як тільки знаходимо false = отже, фінальна відповідь = false */

/* (+null == false) < 1 ** 5; //  +null = 0 і дорівнює false , отже перша частина true; 1**5 = 1, тобто виходить true (1) < 1, що не є правдою, отже false */